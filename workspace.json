{
  "version": 2,
  "cli": {
    "defaultCollection": "@nrwl/react"
  },
  "defaultProject": "sof-questionnaire",
  "generators": {
    "@nrwl/react": {
      "application": {
        "style": "less",
        "linter": "eslint",
        "babel": true
      },
      "component": {
        "style": "less"
      },
      "library": {
        "style": "less",
        "linter": "eslint"
      }
    }
  },
  "projects": {
    "bestiller-types": {
      "root": "libs/bestiller-types",
      "sourceRoot": "libs/bestiller-types/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/bestiller-types/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/bestiller-types"],
          "options": {
            "jestConfig": "libs/bestiller-types/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "fhir": {
      "root": "libs/fhir",
      "sourceRoot": "libs/fhir/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/fhir/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/fhir"],
          "options": {
            "jestConfig": "libs/fhir/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "fhir-components": {
      "root": "libs/fhir-components",
      "sourceRoot": "libs/fhir-components/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/fhir-components/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/fhir-components"],
          "options": {
            "jestConfig": "libs/fhir-components/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "fixtures": {
      "root": "libs/fixtures",
      "sourceRoot": "libs/fixtures/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/fixtures/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/fixtures"],
          "options": {
            "jestConfig": "libs/fixtures/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "fkr-client": {
      "root": "libs/fkr-client",
      "sourceRoot": "libs/fkr-client/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/fkr-client/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/fkr-client"],
          "options": {
            "jestConfig": "libs/fkr-client/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "helseid": {
      "root": "libs/helseid",
      "sourceRoot": "libs/helseid/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/helseid/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/helseid"],
          "options": {
            "jestConfig": "libs/helseid/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "hops-behandler-backend": {
      "root": "apps/hops-behandler-backend",
      "sourceRoot": "apps/hops-behandler-backend/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "externalDependencies": ["express"],
            "generatePackageJson": true,
            "outputPath": "dist/apps/hops-behandler-backend",
            "main": "apps/hops-behandler-backend/src/main.ts",
            "tsConfig": "apps/hops-behandler-backend/tsconfig.app.json",
            "assets": ["apps/hops-behandler-backend/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/hops-behandler-backend/src/environments/environment.ts",
                  "with": "apps/hops-behandler-backend/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "hops-behandler-backend:build"
          },
          "dependsOn": [
            {
              "target": "start-redis",
              "projects": "dependencies"
            }
          ]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/hops-behandler-backend/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/hops-behandler-backend"],
          "options": {
            "jestConfig": "apps/hops-behandler-backend/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "hops-bestiller-backend": {
      "root": "apps/hops-bestiller-backend",
      "sourceRoot": "apps/hops-bestiller-backend/src",
      "projectType": "application",
      "prefix": "hops-bestiller-backend",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "externalDependencies": ["express"],
            "generatePackageJson": true,
            "outputPath": "dist/apps/hops-bestiller-backend",
            "main": "apps/hops-bestiller-backend/src/main.ts",
            "tsConfig": "apps/hops-bestiller-backend/tsconfig.app.json",
            "assets": [
              "apps/hops-bestiller-backend/src/assets",
              "apps/hops-bestiller-backend/src/migrations"
            ],
            "webpackConfig": "configs/webpack.config.node.js"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/hops-bestiller-backend/src/environments/environment.ts",
                  "with": "apps/hops-bestiller-backend/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "hops-bestiller-backend:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/hops-bestiller-backend/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/hops-bestiller-backend"],
          "options": {
            "jestConfig": "apps/hops-bestiller-backend/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "hops-bestiller-frontend": {
      "root": "apps/hops-bestiller-frontend",
      "sourceRoot": "apps/hops-bestiller-frontend/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/hops-bestiller-frontend",
            "index": "apps/hops-bestiller-frontend/src/index.html",
            "main": "apps/hops-bestiller-frontend/src/main.tsx",
            "polyfills": "apps/hops-bestiller-frontend/src/polyfills.ts",
            "tsConfig": "apps/hops-bestiller-frontend/tsconfig.app.json",
            "assets": [
              "apps/hops-bestiller-frontend/src/favicon.ico",
              "apps/hops-bestiller-frontend/src/assets"
            ],
            "styles": ["apps/hops-bestiller-frontend/src/styles.less"],
            "scripts": [],
            "webpackConfig": "configs/webpack.config.hops.js"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/hops-bestiller-frontend/src/environments/environment.ts",
                  "with": "apps/hops-bestiller-frontend/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "hops-bestiller-frontend:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "hops-bestiller-frontend:build:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/hops-bestiller-frontend/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/hops-bestiller-frontend"],
          "options": {
            "jestConfig": "apps/hops-bestiller-frontend/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "hops-common": {
      "root": "libs/hops-common",
      "sourceRoot": "libs/hops-common/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/hops-common/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/hops-common"],
          "options": {
            "jestConfig": "libs/hops-common/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "hops-testutils": {
      "root": "libs/hops-testutils",
      "sourceRoot": "libs/hops-testutils/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/hops-testutils/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/hops-testutils"],
          "options": {
            "jestConfig": "libs/hops-testutils/jest.config.js",
            "passWithNoTests": true
          }
        },
        "start-redis": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["docker-compose up -d redis", "wait-on tcp:6379"]
          }
        }
      }
    },
    "sof-common": {
      "root": "libs/sof-common",
      "sourceRoot": "libs/sof-common/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/sof-common/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/sof-common"],
          "options": {
            "jestConfig": "libs/sof-common/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "sof-questionnaire": {
      "root": "apps/sof-questionnaire",
      "sourceRoot": "apps/sof-questionnaire/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/sof-questionnaire",
            "index": "apps/sof-questionnaire/src/index.html",
            "main": "apps/sof-questionnaire/src/main.tsx",
            "polyfills": "apps/sof-questionnaire/src/polyfills.ts",
            "tsConfig": "apps/sof-questionnaire/tsconfig.app.json",
            "assets": [
              "apps/sof-questionnaire/src/favicon.ico",
              "apps/sof-questionnaire/src/assets"
            ],
            "styles": ["apps/sof-questionnaire/src/styles.less"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/sof-questionnaire/src/environments/environment.ts",
                  "with": "apps/sof-questionnaire/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "sof-questionnaire:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "sof-questionnaire:build:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/sof-questionnaire/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/sof-questionnaire"],
          "options": {
            "jestConfig": "apps/sof-questionnaire/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "sof-resource-puller": {
      "root": "apps/sof-resource-puller",
      "sourceRoot": "apps/sof-resource-puller/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "externalDependencies": ["express"],
            "generatePackageJson": true,
            "outputPath": "dist/apps/sof-resource-puller",
            "main": "apps/sof-resource-puller/src/main.ts",
            "tsConfig": "apps/sof-resource-puller/tsconfig.app.json",
            "assets": ["apps/sof-resource-puller/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/sof-resource-puller/src/environments/environment.ts",
                  "with": "apps/sof-resource-puller/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "start-hapi": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["# docker-compose up -d hapi", "# wait-on http://localhost:8096"]
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "sof-resource-puller:build"
          },
          "dependsOn": [
            {
              "target": "start-hapi",
              "projects": "self"
            }
          ]
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/sof-resource-puller/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/sof-resource-puller"],
          "options": {
            "jestConfig": "apps/sof-resource-puller/jest.config.js",
            "passWithNoTests": true
          },
          "dependsOn": [
            {
              "target": "start-hapi",
              "projects": "self"
            }
          ]
        }
      }
    },
    "sof-skjema": {
      "root": "apps/sof-skjema",
      "sourceRoot": "apps/sof-skjema/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/sof-skjema",
            "index": "apps/sof-skjema/src/index.html",
            "main": "apps/sof-skjema/src/main.tsx",
            "polyfills": "apps/sof-skjema/src/polyfills.ts",
            "tsConfig": "apps/sof-skjema/tsconfig.app.json",
            "assets": ["apps/sof-skjema/src/favicon.ico", "apps/sof-skjema/src/assets"],
            "styles": ["apps/sof-skjema/src/styles.less"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/sof-skjema/src/environments/environment.ts",
                  "with": "apps/sof-skjema/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "sof-skjema:build",
            "hmr": true
          },
          "configurations": {
            "production": {
              "buildTarget": "sof-skjema:build:production",
              "hmr": false
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/sof-skjema/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/sof-skjema"],
          "options": {
            "jestConfig": "apps/sof-skjema/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    }
  }
}
