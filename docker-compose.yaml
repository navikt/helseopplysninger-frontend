version: '3.1'

services:
  bestiller-api:
    build:
      context: "."
      args:
        APPNAME: hops-bestiller-backend
    ports:
     - 8002:2022
    environment:
      APP_INGRESS: http://localhost:8002
      DB_HOST: pg
    env_file:
      - .env
    depends_on:
      - "mock-oauth2-server"
      - "pg"

  sof-questionnaire:
    build:
      context: "."
      args:
        APPNAME: sof-questionnaire
    ports:
      - 8003:2022

  bestiller-gui:
    build:
      context: "."
      args:
        APPNAME: hops-bestiller-frontend
    ports:
      - 8004:2022

  mock-oauth2-server:
    image: ghcr.io/navikt/mock-oauth2-server:0.3.4
    ports:
      - 8030:8030
    environment:
      - SERVER_PORT=8030
    hostname: host.docker.internal

  pg:
    image: postgres
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    expose:
      - ${DB_PORT}
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    command: -p ${DB_PORT}

  hapi:
    image: hapiproject/hapi
    ports:
      - ${FHIR_SERVER_PORT}:8080
    environment:
      hapi.fhir.server_address: http://host.docker.internal:${FHIR_SERVER_PORT}/fhir


  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "${KAFKA_TOPIC_BESTILLING}:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
